"use client";

import { useState } from "react";
import { Button } from "@/components/ui/button";
import { useGetAiSwotQuery } from "@/redux/api/clarhetai-recomandation/clarhetaiApi";
import { Drawer, DrawerClose, DrawerContent, DrawerDescription, DrawerHeader, DrawerTitle, DrawerTrigger } from "@/components/ui/drawer";


type SwotKey = "strengths" | "weaknesses" | "opportunities" | "threats";
type Recommendations = {
  [key in SwotKey]?: string[];
};

export default function SwotDrawer() {
  const { data: swotData } = useGetAiSwotQuery();
  const [isOpen, setIsOpen] = useState(false);

  const recommendations: Recommendations = swotData?.data?.recommendations || {};
  const companyName = swotData?.data?.companyName || "N/A";

  return (
    <div className="p-6">
      <h1 className="text-2xl font-bold mb-4">SWOT Analysis for {companyName}</h1>

      {/* Drawer */}
      <Drawer open={isOpen} onOpenChange={setIsOpen}>
        <DrawerTrigger asChild>
          <Button className="bg-blue-600 text-white">View AI SWOT Analysis</Button>
        </DrawerTrigger>

        <DrawerContent className="p-6">
          <DrawerHeader>
            <DrawerTitle className="text-xl font-semibold">
              AI SWOT Analysis - {companyName}
            </DrawerTitle>
            <DrawerDescription>Recommendations generated by AI</DrawerDescription>
          </DrawerHeader>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mt-4">
            {["strengths", "weaknesses", "opportunities", "threats"].map(
              (key) => (
                <div key={key} className="border p-4 rounded-lg shadow">
                  <h2 className="text-lg font-bold mb-2">{key.charAt(0).toUpperCase() + key.slice(1)}</h2>
                  <ul className="list-disc list-inside space-y-1">
                    {recommendations[key as SwotKey]?.map((item: string, i: number) => (
                      <li key={i}>{item}</li>
                    ))}
                  </ul>
                </div>
              )
            )}
          </div>

          <div className="flex justify-end mt-6">
            <DrawerClose asChild>
              <Button variant="outline">Close</Button>
            </DrawerClose>
          </div>
        </DrawerContent>
      </Drawer>
    </div>
  );
}
